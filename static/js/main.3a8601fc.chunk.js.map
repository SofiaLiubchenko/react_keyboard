{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyboardEventHandler","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAWaA,EAAb,4MACEC,MAAe,CACbC,WAAY,IAFhB,EAaEC,qBAAuB,SAACC,GACtB,EAAKC,SAAS,CACZH,WAAW,4BAAD,OAA8BE,EAAME,IAApC,QAfhB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,wBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,wBAV/C,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,GAAc,kCAzBzB,GAAyBU,IAAMC,W,MCN/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.3a8601fc.chunk.js","sourcesContent":["import React from 'react';\n\n// export const App: React.FC = () => (\n//   <div className=\"App\">\n//     <p className=\"App__message\">The last pressed key is [Enter]</p>\n//   </div>\n// );\ninterface State {\n  pressedKey: string;\n}\n\nexport class App extends React.Component {\n  state: State = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyboardEventHandler);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyboardEventHandler);\n  }\n\n  keyboardEventHandler = (event: KeyboardEvent) => {\n    this.setState({\n      pressedKey: `The last pressed key is [${event.key}]`,\n    });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey || 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}